{"version":3,"sources":["helper/index.js","Layout/Navbar.js","context/createDataContext.js","context/MapContext.js","Component/MapLoading.js","Component/PopoverComp.js","Map/ZoomButton.js","Map/WolrdMapChart.js","Map/USMapChart.js","Component/Tabs.js","Component/SourceDisplay.js","Map/MapCaseSummary.js","Map/MapChart.js","caseNumBoard/Table.js","caseNumBoard/index.js","Map/index.js","context/ChartContext.js","Chart/CountryIcons.js","Chart/DataType.js","Chart/index.js","Layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["moment","require","module","exports","dateLabel","num","arr","i","unshift","subtract","format","rounded","Math","round","abbrev","country","colorCalculate","GlobalTotalConfirmed","TotalConfirmed","percent","floor","colorPick","colorSet","length","Header","Navbar","style","padding","Brand","href","width","marginTop","alt","src","process","Nav","Link","color","hover","reducer","actions","defaultValue","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","createDataContext","action","type","loading","caseData","playload","mapSummaryData","US_Case_Data","worldMapData","fetchUSData","a","axios","get","fetch_case_data","fetch_summary_Data","console","log","setTimeout","data","cases","todayCases","recovered","deaths","todayDeaths","tests","testsPerOneMillion","summaryData","NewConfirmed","TotalRecovered","NewRecovered","TotalDeaths","NewDeaths","Test","TestsPerOneMillion","push","Country","each","USRawData","objects","states","geometries","stateData","properties","name","err","fetchWorldData","Countries","sort","x","y","WorldRawData","ne_110m_admin_0_countries","countryData","NAME","Global","setLoading","USMapData","MapLoading","textAlign","height","position","Spinner","animation","PopComp","Popover","Title","as","PopoverContent","fontSize","className","Number","toFixed","Zoom","setPosition","onClick","zoom","pos","WolrdMapChart","useState","coordinates","useContext","MapContext","useEffect","projectionConfig","scale","rotation","center","onMoveEnd","stroke","geography","geographies","map","geo","OverlayTrigger","trigger","placement","rsmKey","overlay","PopoverComp","default","fill","strokeWidth","outline","pressed","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","USMapChart","projection","centroid","geoCentroid","cur","allStates","find","s","val","id","Object","keys","indexOf","textAnchor","userSelect","subject","dx","dy","alignmentBaseline","tabs","Tabs","setMap","target","setTarget","tab","Paper","elevation","SourceDisplay","Source","source","margin","rel","MapCaseSummary","Row","Col","memo","minHeight","paddingTop","mapDisplay","useStyles","makeStyles","root","container","StickyHeadTable","classes","setHover","more","setMore","useRef","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","current","show","Tooltip","marginBottom","ref","onMouseEnter","onMouseLeave","background","TableBody","role","tabIndex","Board","MapContainer","lg","xl","animateIn","animateOut","series","fetchData","info","days","fetch_data","caseArr","timeline","deathsData","recoveredData","case","getData","updateSeries","default_arr","CountryIcons","active","handleActive","max","setMax","overflow","slice","display","title","has","border","fontWeight","infoSet","variant","DataType","infoChangeHandler","flex","Button","size","defaultSet","Set","ChartComponent","setActive","setInfo","setDays","inputLabel","labelWidth","setLabelWidth","ChartContext","offsetWidth","update","newSeries","delete","add","options","chart","enabled","dataLabels","curve","dashArray","text","legend","tooltipHoverFormatter","opts","w","globals","seriesIndex","dataPointIndex","markers","sizeOffset","xaxis","categories","labels","fontFamily","cssClass","yaxis","tooltip","formatter","grid","borderColor","offset","FormControl","minWidth","InputLabel","Select","native","onChange","e","sentence","split","Footer","Container","char","marginRight","App","Chart","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7336920d.chunk.js","sourcesContent":["const moment = require(\"moment\");\n\nmodule.exports = {\n  dateLabel: (num) => {\n    let arr = [];\n    for (let i = 1; i <= num; i += 1) {\n      arr.unshift(moment().subtract(i, \"days\").format(\"MM/DD\"));\n    }\n    return arr;\n  },\n\n  rounded: (num) => {\n    if (num > 1000000000) {\n      return Math.round(num / 100000000) / 10 + \"Bn\";\n    } else if (num > 1000000) {\n      return Math.round(num / 100000) / 10 + \"M\";\n    } else if (num > 10000) {\n      return Math.round(num / 100) / 10 + \"K\";\n    } else {\n      return num;\n    }\n  },\n\n  abbrev: (country) => {\n    switch (country) {\n      case \"United States of America\":\n        return \"Uninted States\";\n      case \"Russian Federation\":\n        return \"Russia\";\n      case \"Iran, Islamic Republic of\":\n        return \"Iran\";\n      default:\n        return country;\n    }\n  },\n\n  colorCalculate: (GlobalTotalConfirmed, TotalConfirmed) => {\n    if (!TotalConfirmed) return 50;\n    let percent = Math.floor(GlobalTotalConfirmed / TotalConfirmed);\n    if (percent > 10000) {\n      return 44 + Math.floor(GlobalTotalConfirmed / TotalConfirmed / 4000);\n    } else if (percent > 1000) {\n      return 33 + Math.floor(GlobalTotalConfirmed / TotalConfirmed / 400);\n    } else if (percent > 100) {\n      return 22 + Math.floor(GlobalTotalConfirmed / TotalConfirmed / 50);\n    } else if (percent > 10) {\n      return 11 + Math.floor(GlobalTotalConfirmed / TotalConfirmed / 5);\n    } else {\n      return Math.floor(GlobalTotalConfirmed / TotalConfirmed / 3);\n    }\n  },\n\n  colorPick: (num) => {\n    let colorSet = [\n      \"#710022\",\n      \"#760426\",\n      \"#7c0829\",\n      \"#810c2d\",\n      \"#861031\",\n      \"#8b1435\",\n      \"#901839\",\n      \"#951c3d\",\n      \"#9a2041\",\n      \"#9f2445\",\n      \"#a42748\",\n      \"#a92b4c\",\n      \"#ae2f50\",\n      \"#b33354\",\n      \"#b83757\",\n      \"#bd3b5b\",\n      \"#c23f5f\",\n      \"#c74263\",\n      \"#cc4666\",\n      \"#cf4b6b\",\n      \"#d25170\",\n      \"#d65675\",\n      \"#d95b7a\",\n      \"#dc617f\",\n      \"#df6684\",\n      \"#e26b89\",\n      \"#e5708d\",\n      \"#e87592\",\n      \"#eb7a97\",\n      \"#ee7f9b\",\n      \"#f184a0\",\n      \"#f489a5\",\n      \"#f78ea9\",\n      \"#f993ae\",\n      \"#fc98b3\",\n      \"#ff9db7\",\n      \"#fea4bc\",\n      \"#fdabc1\",\n      \"#fdb2c6\",\n      \"#fcb8ca\",\n      \"#fbbecf\",\n      \"#fac5d3\",\n      \"#facbd7\",\n      \"#f9d1dc\",\n      \"#f8d7e0\",\n      \"#f8dde4\",\n      \"#f7e3e9\",\n      \"#f6e9ed\",\n      \"#f6eff1\",\n      \"#f5f5f5\",\n      \"#f0f0f0\",\n    ];\n    if (!num || num > colorSet.length - 1) return colorSet[colorSet.length - 1];\n\n    return colorSet[num];\n  },\n};\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst Header = () => {\n  return (\n    <Navbar\n      style={{\n        padding: \"0 0 0 2rem\",\n      }}\n    >\n      <Navbar.Brand href=\"/\">\n        <img\n          style={{\n            width: 100,\n            marginTop: -10,\n          }}\n          alt=\"logo\"\n          src={`${\n            process.env.PUBLIC_URL && `${process.env.PUBLIC_URL}`\n          }/logo.jpeg`}\n        />\n      </Navbar.Brand>\n      <Nav.Link\n        style={{\n          color: \"rgba(0,0,0,.7)\",\n          hover: {\n            color: \"black\",\n          },\n        }}\n        href=\"/\"\n      >\n        Home\n      </Nav.Link>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React, { useReducer } from \"react\";\n\nexport default (reducer, actions, defaultValue) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, defaultValue);\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n  return { Context, Provider };\n};\n","import createDataContext from \"./createDataContext\";\nimport USRawData from \"../Data/USMapRaw.json\";\nimport WorldRawData from \"../Data/worldMapRaw.json\";\nimport axios from \"axios\";\n\nconst trackReducer = (state, action) => {\n  switch (action.type) {\n    case \"set_loading\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case \"fetch_US_data\":\n      return {\n        ...state,\n        caseData: action.playload[0],\n        mapSummaryData: action.playload[1],\n        US_Case_Data: action.playload[2],\n        loading: false,\n      };\n    case \"fetch_world_data\":\n      return {\n        ...state,\n        caseData: action.playload[0],\n        mapSummaryData: action.playload[1],\n        worldMapData: action.playload[2],\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst setLoading = (dispatch) => (state) => {\n  return dispatch({\n    type: \"set_loading\",\n    // playload: true,\n  });\n};\n\nconst fetchWorldData = (dispatch) => async () => {\n  let caseData;\n\n  try {\n    caseData = await axios.get(\"https://api.covid19api.com/summary\");\n  } catch (err) {\n    console.log(err, \"Error\");\n    return;\n  }\n\n  let data = caseData.data.Countries.sort(\n    (x, y) => y.TotalConfirmed - x.TotalConfirmed\n  );\n\n  let state = {};\n\n  try {\n    for (let each of data) {\n      state[each.Country] = each;\n    }\n\n    for (let countryData of WorldRawData.objects.ne_110m_admin_0_countries\n      .geometries) {\n      // if (!state[countryData.properties.NAME])\n      //   console.log(countryData.properties.NAME);\n      countryData.properties = state[countryData.properties.NAME]\n        ? { ...countryData.properties, ...state[countryData.properties.NAME] }\n        : countryData.properties;\n    }\n  } catch (err) {\n    console.log(err, \"World Map Fetch Data Error\");\n  }\n\n  return dispatch({\n    type: \"fetch_world_data\",\n    playload: [data, caseData.data.Global, WorldRawData],\n  });\n};\n\nconst fetchUSData = (dispatch) => async () => {\n  let fetch_case_data, fetch_summary_Data;\n  let state = {};\n\n  try {\n    fetch_case_data = await axios.get(\n      \"https://corona.lmao.ninja/v2/states?sort\"\n    );\n    fetch_summary_Data = await axios.get(\n      \"https://corona.lmao.ninja/v2/countries/usa\"\n    );\n  } catch (err) {\n    console.log(err, \"Error\");\n    setTimeout(function () {\n      console.log(\"Hello\");\n    }, 3000);\n  }\n\n  const {\n    cases,\n    todayCases,\n    recovered,\n    deaths,\n    todayDeaths,\n    tests,\n    testsPerOneMillion,\n  } = fetch_summary_Data.data;\n\n  const summaryData = {\n    TotalConfirmed: cases,\n    NewConfirmed: todayCases,\n    TotalRecovered: recovered,\n    NewRecovered: null,\n    TotalDeaths: deaths,\n    NewDeaths: todayDeaths,\n    Test: tests,\n    TestsPerOneMillion: testsPerOneMillion,\n  };\n\n  let caseData = [];\n  for (let data of fetch_case_data.data) {\n    caseData.push({\n      Country: data.state,\n      TotalConfirmed: data.cases,\n      NewConfirmed: data.todayCases,\n    });\n  }\n\n  try {\n    for (let each of fetch_case_data.data) {\n      state[each.state] = each;\n    }\n\n    for (let stateData of USRawData.objects.states.geometries) {\n      stateData.properties = state[stateData.properties.name]\n        ? { ...stateData.properties, ...state[stateData.properties.name] }\n        : stateData.properties;\n    }\n  } catch (err) {\n    console.log(err, \"US Map Fetch Data Error\");\n  }\n\n  dispatch({\n    type: \"fetch_US_data\",\n    playload: [caseData, summaryData, USRawData],\n  });\n};\n\nexport const { Provider, Context } = createDataContext(\n  trackReducer,\n  { fetchUSData, fetchWorldData, setLoading },\n  {\n    mapSummaryData: {},\n    caseData: [],\n    USMapData: USRawData,\n    worldMapData: WorldRawData,\n    loading: true,\n  }\n);\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nexport const MapLoading = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        textAlign: \"center\",\n        height: \"100%\",\n        position: \"relative\",\n        height: 550,\n        display: \"block\",\n        paddingTop: \" 35%\",\n      }}\n    >\n      <h3>\n        <Spinner animation=\"grow\" /> Loading...\n      </h3>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Popover, PopoverContent } from \"react-bootstrap\";\nimport { rounded, abbrev } from \"../helper\";\nimport \"./PopoverComp.css\";\n\nconst PopComp = ({\n  NAME,\n  TotalConfirmed,\n  NewConfirmed,\n  TotalDeaths,\n  NewDeaths,\n  TotalRecovered,\n  NewRecovered,\n  Test,\n}) => {\n  return (\n    <Popover>\n      <Popover.Title as=\"h3\">{abbrev(NAME)}</Popover.Title>\n      <PopoverContent>\n        <div>\n          <span\n            style={{\n              fontSize: \"0.7rem\",\n            }}\n          >\n            Total Confirmed:{\" \"}\n          </span>\n          <span className=\"confirmedCase\">{rounded(TotalConfirmed)}</span>\n          <span\n            className=\"confirmedCase font-weight-bold\"\n            style={{\n              fontSize: \"0.6rem\",\n            }}\n          >\n            {typeof NewConfirmed === \"number\"\n              ? ` + ${rounded(NewConfirmed)} new`\n              : \"N/A\"}\n          </span>\n        </div>\n\n        {TotalDeaths && (\n          <div>\n            <span\n              style={{\n                fontSize: \"0.7rem\",\n              }}\n            >\n              Total Deaths:{\" \"}\n            </span>\n            <span className=\"deathCase\">{rounded(TotalDeaths)}</span>\n            <span\n              className=\"deathCase font-weight-bold\"\n              style={{\n                fontSize: \"0.6rem\",\n              }}\n            >\n              {typeof NewDeaths === \"number\"\n                ? ` + ${rounded(NewDeaths)} new`\n                : \"N/A\"}\n            </span>\n          </div>\n        )}\n\n        {TotalRecovered && (\n          <div>\n            <span\n              style={{\n                fontSize: \"0.7rem\",\n              }}\n            >\n              Total Recovered:{\" \"}\n            </span>\n            <span className=\"recoveredCase\">{rounded(TotalRecovered)}</span>\n            <span\n              className=\"recoveredCase font-weight-bold\"\n              style={{\n                fontSize: \"0.6rem\",\n              }}\n            >\n              {typeof NewRecovered === \"number\"\n                ? ` + ${rounded(NewRecovered)} new`\n                : \"N/A\"}\n            </span>\n          </div>\n        )}\n\n        {Test && (\n          <div>\n            <span\n              style={{\n                fontSize: \"0.75rem\",\n              }}\n            >\n              Total Test:{\"  \"}\n            </span>\n            <span className=\"testCase\">{rounded(Test)}</span>\n            <span\n              className=\"testCase font-weight-bold\"\n              style={{\n                fontSize: \"0.65rem\",\n              }}\n            >\n              {typeof Test === \"number\"\n                ? `${\" (\"}${Number((TotalConfirmed / Test) * 100).toFixed(\n                    1\n                  )}% Confirmed)`\n                : \"N/A\"}\n            </span>\n          </div>\n        )}\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default PopComp;\n","import React from \"react\";\nimport { FaPlusCircle, FaMinusCircle } from \"react-icons/fa\";\n\nexport default function Zoom({ position, setPosition }) {\n  const handleZoomIn = () => {\n    if (position.zoom >= 4) return;\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom * 2 }));\n  };\n\n  const handleZoomOut = () => {\n    if (position.zoom <= 1) return;\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom / 2 }));\n  };\n\n  return (\n    <div className=\"controls\">\n      <FaPlusCircle className=\"controls-icons\" onClick={handleZoomIn} />\n      <FaMinusCircle className=\"controls-icons\" onClick={handleZoomOut} />\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useContext, useEffect } from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Graticule,\n} from \"react-simple-maps\";\n\nimport { Context as MapContext } from \"../context/MapContext\";\n\nimport { OverlayTrigger } from \"react-bootstrap\";\n\nimport { colorPick, colorCalculate } from \"../helper\";\n\nimport { MapLoading } from \"../Component/MapLoading\";\nimport PopoverComp from \"../Component/PopoverComp\";\nimport ZoomButton from \"./ZoomButton\";\n\nexport const WolrdMapChart = () => {\n  // const [loading, setLoading] = useState(true);\n  const [position, setPosition] = useState({ coordinates: [0, 0], zoom: 1 });\n\n  const {\n    state: { worldMapData, mapSummaryData, loading },\n    setLoading,\n    fetchWorldData,\n  } = useContext(MapContext);\n\n  const handleMoveEnd = (position) => {\n    setPosition(position);\n  };\n\n  useEffect(() => {\n    setLoading();\n    fetchWorldData();\n  }, []);\n\n  return (\n    <>\n      {!loading ? (\n        <>\n          <ComposableMap\n            projectionConfig={{ scale: 125, rotation: [-11, 0, 0] }}\n            width={820}\n            height={550}\n          >\n            <ZoomableGroup\n              zoom={position.zoom}\n              center={position.coordinates}\n              onMoveEnd={handleMoveEnd}\n            >\n              <Graticule stroke=\"#eeeeee\" />\n              <Geographies geography={worldMapData}>\n                {({ geographies }) =>\n                  geographies.map((geo) => {\n                    const {\n                      NAME,\n                      NewConfirmed,\n                      TotalConfirmed,\n                      TotalDeaths,\n                      NewDeaths,\n                      TotalRecovered,\n                      NewRecovered,\n                    } = geo.properties;\n\n                    return (\n                      <OverlayTrigger\n                        trigger={[\"focus\", \"hover\", \"click\"]}\n                        placement=\"right\"\n                        key={geo.rsmKey}\n                        overlay={PopoverComp({\n                          NAME,\n                          TotalConfirmed,\n                          NewConfirmed,\n                          TotalDeaths,\n                          NewDeaths,\n                          TotalRecovered,\n                          NewRecovered,\n                        })}\n                      >\n                        <Geography\n                          geography={geo}\n                          style={{\n                            default: {\n                              fill: `${colorPick(\n                                colorCalculate(\n                                  mapSummaryData.TotalConfirmed,\n                                  TotalConfirmed\n                                )\n                              )}`,\n                              stroke: \"#adb5bd\",\n                              strokeWidth: 0.75,\n                              outline: \"none\",\n                            },\n                            hover: {\n                              fill: \"#F53\",\n                              stroke: \"#adb5bd\",\n                              strokeWidth: 0.75,\n                              outline: \"none\",\n                            },\n                            pressed: {\n                              fill: \"#E42\",\n                              stroke: \"#adb5bd\",\n                              strokeWidth: 0.75,\n                              outline: \"none\",\n                            },\n                          }}\n                        />\n                      </OverlayTrigger>\n                    );\n                  })\n                }\n              </Geographies>\n            </ZoomableGroup>\n          </ComposableMap>\n          <ZoomButton position={position} setPosition={setPosition} />\n        </>\n      ) : (\n        <MapLoading />\n      )}\n    </>\n  );\n};\n\nexport default WolrdMapChart;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext } from \"react\";\nimport { geoCentroid } from \"d3-geo\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation,\n} from \"react-simple-maps\";\nimport { colorPick, colorCalculate } from \"../helper\";\n\nimport { Context as MapContext } from \"../context/MapContext\";\n\nimport { OverlayTrigger } from \"react-bootstrap\";\n\nimport allStates from \"../Data/allStates.json\";\n\nimport { MapLoading } from \"../Component/MapLoading\";\nimport PopoverComp from \"../Component/PopoverComp\";\n\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21],\n};\n\nconst USMapChart = () => {\n  const {\n    state: { loading, USMapData, mapSummaryData },\n    setLoading,\n    fetchUSData,\n  } = useContext(MapContext);\n\n  useEffect(() => {\n    setLoading();\n    fetchUSData();\n  }, []);\n\n  return (\n    <>\n      {!loading ? (\n        <>\n          <ComposableMap\n            projectionConfig={{ scale: 900 }}\n            width={750}\n            height={500}\n            projection=\"geoAlbersUsa\"\n          >\n            <Geographies geography={USMapData}>\n              {({ geographies }) => (\n                <>\n                  {geographies.map((geo) => {\n                    const {\n                      name,\n                      cases,\n                      todayCases,\n                      deaths,\n                      todayDeaths,\n                      tests,\n                    } = geo.properties;\n\n                    return (\n                      <OverlayTrigger\n                        trigger={[\"focus\", \"hover\", \"click\"]}\n                        placement=\"right\"\n                        key={geo.rsmKey}\n                        overlay={PopoverComp({\n                          NAME: name,\n                          TotalConfirmed: cases,\n                          NewConfirmed: todayCases,\n                          TotalDeaths: deaths,\n                          NewDeaths: todayDeaths,\n                          Test: tests,\n                        })}\n                      >\n                        <Geography\n                          key={geo.rsmKey}\n                          stroke=\"#FFF\"\n                          geography={geo}\n                          // fill=\"#DDD\"\n                          style={{\n                            default: {\n                              fill: `${colorPick(\n                                colorCalculate(\n                                  mapSummaryData.TotalConfirmed,\n                                  cases\n                                )\n                              )}`,\n                              stroke: \"#adb5bd\",\n                              strokeWidth: 0.75,\n                              outline: \"none\",\n                            },\n                            hover: {\n                              fill: \"#F53\",\n                              stroke: \"#adb5bd\",\n                              strokeWidth: 0.75,\n                              outline: \"none\",\n                            },\n                            pressed: {\n                              fill: \"#E42\",\n                              stroke: \"#adb5bd\",\n                              strokeWidth: 0.75,\n                              outline: \"none\",\n                            },\n                          }}\n                        />\n                      </OverlayTrigger>\n                    );\n                  })}\n\n                  {geographies.map((geo) => {\n                    const centroid = geoCentroid(geo);\n                    const cur = allStates.find((s) => s.val === geo.id);\n                    return (\n                      <g key={geo.rsmKey + \"-name\"}>\n                        {cur &&\n                          centroid[0] > -160 &&\n                          centroid[0] < -67 &&\n                          (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                            <Marker coordinates={centroid}>\n                              <text\n                                y=\"2\"\n                                fontSize={14}\n                                textAnchor=\"middle\"\n                                style={{\n                                  userSelect: \"none\",\n                                }}\n                              >\n                                {cur.id}\n                              </text>\n                            </Marker>\n                          ) : (\n                            <Annotation\n                              subject={centroid}\n                              dx={offsets[cur.id][0]}\n                              dy={offsets[cur.id][1]}\n                            >\n                              <text\n                                x={4}\n                                fontSize={14}\n                                alignmentBaseline=\"middle\"\n                              >\n                                {cur.id}\n                              </text>\n                            </Annotation>\n                          ))}\n                      </g>\n                    );\n                  })}\n                </>\n              )}\n            </Geographies>\n            }\n          </ComposableMap>\n        </>\n      ) : (\n        <MapLoading />\n      )}\n    </>\n  );\n};\n\nexport default USMapChart;\n","import React, { useState } from \"react\";\nimport \"./Tabs.css\";\nimport { Paper } from \"@material-ui/core\";\n\nconst tabs = [\"World\", \"United States\", \"Europe\"];\n\nconst Tabs = ({ setMap }) => {\n  const [target, setTarget] = useState(\"World\");\n  return (\n    <div className=\"tabs\">\n      {tabs.map((tab) => (\n        <Paper\n          className={`tab ${target === tab ? \"active\" : \"\"}`}\n          key={tab}\n          onClick={() => {\n            setMap(tab);\n            setTarget(tab);\n          }}\n          elevation={3}\n        >\n          {tab}\n        </Paper>\n      ))}\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React from \"react\";\n\nexport const SourceDisplay = ({ map }) => {\n  const source = (map) => {\n    switch (map) {\n      case \"World\":\n        return [\"https://www.covid19api.com\", \"covid19api.com\"];\n      case \"United States\":\n        return [\"https://corona.lmao.ninja\", \"corona.lmao.ninja\"];\n      default:\n        return [\"https://www.covid19api.com\", \"covid19api.com\"];\n    }\n  };\n\n  const Source = source(map);\n\n  return (\n    <p\n      style={{\n        fontSize: \"0.75rem\",\n        margin: 3,\n      }}\n    >\n      Source from{\" \"}\n      <a href={Source[0]} target=\"_blank\" rel=\"noopener noreferrer\">\n        {Source[1]}\n      </a>\n    </p>\n  );\n};\n","import React, { useContext } from \"react\";\n\nimport { Row, Col } from \"react-bootstrap\";\nimport { Context as MapContext } from \"../context/MapContext\";\n\nconst MapCaseSummary = () => {\n  const {\n    state: {\n      mapSummaryData: {\n        TotalConfirmed,\n        NewConfirmed,\n        TotalDeaths,\n        NewDeaths,\n        TotalRecovered,\n        NewRecovered,\n        Test,\n      },\n    },\n  } = useContext(MapContext);\n\n  return (\n    <Row\n      style={{\n        width: \"100%\",\n        margin: 0,\n      }}\n    >\n      {TotalConfirmed && (\n        <Col className=\"caseDisplayContainer confirmedCaseBackground\">\n          <span>\n            {TotalConfirmed}\n            <p\n              className=\"font-weight-bold\"\n              style={{\n                fontSize: \"0.6rem\",\n              }}\n            >\n              {NewConfirmed ? `${\" \"}+ ${NewConfirmed} new` : \"N/A\"}\n            </p>\n          </span>\n          <h5>Confirmed</h5>\n        </Col>\n      )}\n\n      {TotalRecovered && (\n        <Col className=\"caseDisplayContainer recoveredCaseBackground\">\n          <span>\n            {TotalRecovered}\n            <p\n              className=\"font-weight-bold\"\n              style={{\n                fontSize: \"0.6rem\",\n              }}\n            >\n              {NewRecovered ? `${\" \"}+ ${NewRecovered} new` : \"N/A\"}\n            </p>\n          </span>\n          <h5>Recovered</h5>\n        </Col>\n      )}\n\n      {TotalDeaths && (\n        <Col className=\"caseDisplayContainer deathCaseBackground\">\n          <span>\n            {TotalDeaths}\n            <p\n              className=\"font-weight-bold\"\n              style={{\n                fontSize: \"0.6rem\",\n              }}\n            >\n              {NewDeaths ? `${\" \"}+ ${NewDeaths} new` : \"N/A\"}\n            </p>\n          </span>\n          <h5>Death</h5>\n        </Col>\n      )}\n\n      {Test && (\n        <Col className=\"caseDisplayContainer testCaseBackground\">\n          <span>\n            {Test}\n            <p\n              className=\"font-weight-bold\"\n              style={{\n                fontSize: \"0.6rem\",\n              }}\n            >\n              {Test\n                ? ` ${Number(Test / TotalConfirmed).toFixed(1)}% Confirmed`\n                : \"N/A\"}\n            </p>\n          </span>\n          <h5>Tests</h5>\n        </Col>\n      )}\n    </Row>\n  );\n};\n\nexport default MapCaseSummary;\n","import React, { memo, useState } from \"react\";\n\nimport WorldMapChart from \"./WolrdMapChart\";\nimport USMapChart from \"./USMapChart\";\n\nimport Tabs from \"../Component/Tabs\";\nimport { SourceDisplay } from \"../Component/SourceDisplay\";\n// import { Paper } from \"@material-ui/core\";\nimport MapCaseSummary from \"./MapCaseSummary\";\n\nconst MapChart = () => {\n  const [map, setMap] = useState(\"World\");\n\n  const mapDisplay = (map) => {\n    switch (map) {\n      case \"World\":\n        return <WorldMapChart />;\n      case \"United States\":\n        return <USMapChart />;\n      case \"Europe\":\n        return (\n          <div\n            style={{\n              height: 600,\n              textAlign: \"center\",\n              paddingTop: \"25%\",\n            }}\n          >\n            <h1>Comming Soon...</h1>\n          </div>\n        );\n      default:\n        return null;\n      // return <WorldMapChart />;\n    }\n  };\n\n  return (\n    <>\n      <Tabs setMap={setMap} />\n      <div\n        style={{\n          minHeight: \"calc(100vh - 115px)\",\n        }}\n        elevation={3}\n      >\n        {mapDisplay(map)}\n      </div>\n      {MapCaseSummary()}\n      <SourceDisplay map={map} />\n    </>\n  );\n};\n\nexport default memo(MapChart);\n","import React, { useState, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Paper from \"@material-ui/core/Paper\";\nimport { Paper, Table, TableBody, TableCell } from \"@material-ui/core\";\n// import  from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { abbrev, rounded } from \"../helper\";\n\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { IoIosMore } from \"react-icons/io\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    height: \"100vh\",\n    marginTop: 50,\n  },\n});\n\nexport default function StickyHeadTable({ caseData }) {\n  const classes = useStyles();\n\n  const [hover, setHover] = useState(false);\n  const [more, setMore] = useState(false);\n  const target = useRef(null);\n\n  return (\n    <Paper className={classes.root} elevation={3}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">#</TableCell>\n              <TableCell align=\"center\">Location</TableCell>\n              <TableCell align=\"center\">Confirmed#</TableCell>\n              {!more ? (\n                <OverlayTrigger\n                  target={target.current}\n                  placement=\"top\"\n                  show={hover}\n                  overlay={\n                    <Tooltip\n                      style={{\n                        marginBottom: 5,\n                      }}\n                    >\n                      More Detail\n                    </Tooltip>\n                  }\n                >\n                  <TableCell\n                    align=\"center\"\n                    ref={target}\n                    onMouseEnter={() => setHover(true)}\n                    onMouseLeave={() => setHover(false)}\n                    onClick={() => setMore(true)}\n                    style={{\n                      background: hover ? \"grey\" : \"gainsboro\",\n                    }}\n                  >\n                    <IoIosMore />\n                  </TableCell>\n                </OverlayTrigger>\n              ) : (\n                <>\n                  <TableCell align=\"center\">Active_Case</TableCell>\n                  <TableCell align=\"center\">Active_Rate</TableCell>\n                  <TableCell align=\"center\">Death</TableCell>\n                  <TableCell align=\"center\">Death_Rate</TableCell>\n                  <TableCell align=\"center\">Recovered</TableCell>\n                  <TableCell align=\"center\">Recovered_Rate</TableCell>\n                </>\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody align=\"center\">\n            {caseData.map(\n              (\n                {\n                  Country,\n                  TotalConfirmed,\n                  NewConfirmed,\n                  NewDeaths,\n                  TotalDeaths,\n                  NewRecovered,\n                  TotalRecovered,\n                },\n                i\n              ) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={Country}>\n                    <TableCell align=\"center\">{i + 1}</TableCell>\n                    <TableCell align=\"center\">{abbrev(Country)}</TableCell>\n                    <TableCell align=\"center\" className=\"confirmedCase\">\n                      {TotalConfirmed}\n                      <div\n                        style={{\n                          fontSize: \"0.55rem\",\n                        }}\n                      >\n                        {typeof NewConfirmed === \"number\"\n                          ? ` + ${rounded(NewConfirmed)} new`\n                          : \"N/A\"}\n                      </div>\n                    </TableCell>\n                    {more ? (\n                      <>\n                        <TableCell align=\"center\" className=\"testCase\">\n                          {TotalConfirmed - TotalDeaths - TotalRecovered}\n                        </TableCell>\n\n                        <TableCell\n                          align=\"center\"\n                          className=\"font-weight-bold activeCase\"\n                        >\n                          {Number(\n                            ((TotalConfirmed - TotalDeaths - TotalRecovered) *\n                              100) /\n                              TotalConfirmed\n                          ).toFixed(1)}\n                          %\n                        </TableCell>\n\n                        <TableCell align=\"center\" className=\"deathCase\">\n                          {TotalDeaths}{\" \"}\n                          <div\n                            className=\"font-weight-bold\"\n                            style={{\n                              fontSize: \"0.55rem\",\n                            }}\n                          >\n                            {typeof NewConfirmed === \"number\"\n                              ? ` + ${rounded(NewDeaths)} new`\n                              : \"N/A\"}\n                          </div>\n                        </TableCell>\n\n                        <TableCell\n                          align=\"center\"\n                          className=\"deathRate font-weight-bold\"\n                        >\n                          {Number((TotalDeaths / TotalConfirmed) * 100).toFixed(\n                            1\n                          )}\n                          %\n                        </TableCell>\n\n                        <TableCell align=\"center\" className=\"recoveredCase\">\n                          {TotalRecovered}{\" \"}\n                          <div\n                            className=\"font-weight-bold\"\n                            style={{\n                              fontSize: \"0.55rem\",\n                            }}\n                          >\n                            {typeof NewConfirmed === \"number\"\n                              ? ` + ${rounded(NewRecovered)} new`\n                              : \"N/A\"}\n                          </div>\n                        </TableCell>\n\n                        <TableCell\n                          align=\"center\"\n                          className=\"recoveredRate font-weight-bold\"\n                        >\n                          {Number(\n                            (TotalRecovered / TotalConfirmed) * 100\n                          ).toFixed(1)}\n                          %\n                        </TableCell>\n                      </>\n                    ) : (\n                      <TableCell />\n                    )}\n                  </TableRow>\n                );\n              }\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Context as MapContext } from \"../context/MapContext\";\nimport { MapLoading } from \"../Component/MapLoading\";\n\nimport Table from \"./Table\";\n\nconst Board = () => {\n  const {\n    state: { caseData },\n  } = useContext(MapContext);\n\n  return (\n    <>{!!caseData.length ? <Table caseData={caseData} /> : <MapLoading />}</>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\n\nimport \"./index.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport MapChart from \"./MapChart\";\nimport Board from \"../caseNumBoard\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport { Paper } from \"@material-ui/core\";\n\nconst MapContainer = () => {\n  return (\n    <Paper\n      elevation={3}\n      style={{\n        margin: \"1.5rem\",\n        padding: \"1rem 1rem 0.25rem 1rem\",\n      }}\n    >\n      <div\n        style={{\n          margin: \"1rem\",\n        }}\n      >\n        <h1>Map</h1>\n      </div>\n      <Row\n        style={{\n          margin: \"0 0 60px 0\",\n        }}\n      >\n        <Col lg={12} xl={8}>\n          <ScrollAnimation\n            animateIn=\"bounceInLeft\"\n            animateOut=\"fadeOutRight\"\n            // delay={500}\n            // animateOnce={true}\n          >\n            <MapChart />\n          </ScrollAnimation>\n        </Col>\n        <Col lg={12} xl={4}>\n          <ScrollAnimation\n            animateIn=\"bounceInRight\"\n            animateOut=\"fadeOutLeft\"\n            // delay={500}\n            // animateOnce={true}\n          >\n            <Board />\n          </ScrollAnimation>\n        </Col>\n      </Row>\n    </Paper>\n  );\n};\n\nexport default MapContainer;\n","import createDataContext from \"./createDataContext\";\nimport axios from \"axios\";\n\nconst trackReducer = (state, action) => {\n  switch (action.type) {\n    case \"fetch_data\":\n      return {\n        ...state,\n        data: action.playload[0],\n        series: action.playload[1],\n        loading: false,\n      };\n    case \"update_series\":\n      return {\n        ...state,\n        series: action.playload,\n      };\n    case \"set_loading\":\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst fetchData = (dispatch) => async (state, info, days) => {\n  let fetch_data;\n  let data = {};\n  let series = [];\n\n  try {\n    fetch_data = await axios.get(\n      `https://corona.lmao.ninja/v2/historical?lastdays=${days}`\n    );\n\n    for (let each of fetch_data.data) {\n      let caseArr = [];\n      let deaths = [];\n      let recovered = [];\n\n      for (let caseData in each.timeline.cases) {\n        caseArr.push(each.timeline.cases[caseData]);\n      }\n\n      for (let deathsData in each.timeline.deaths) {\n        deaths.push(each.timeline.deaths[deathsData]);\n      }\n\n      for (let recoveredData in each.timeline.recovered) {\n        recovered.push(each.timeline.recovered[recoveredData]);\n      }\n\n      // In some cases, one country have mutilple provinces data\n      if (data[each.country]) {\n        for (let i in data[each.country].case) {\n          data[each.country].case[i] += caseArr[i];\n        }\n\n        for (let i in data[each.country].deaths) {\n          data[each.country].deaths[i] += deaths[i];\n        }\n\n        for (let i in data[each.country].recovered) {\n          data[each.country].recovered[i] += recovered[i];\n        }\n      } else {\n        data[each.country] = {\n          case: caseArr,\n          deaths,\n          recovered,\n        };\n      }\n    }\n  } catch (err) {\n    console.log(\"Err\", err);\n  }\n\n  for (let country of state) {\n    series.push({\n      name: country,\n      data: getData(data, country, info),\n    });\n  }\n\n  dispatch({\n    type: \"fetch_data\",\n    playload: [data, series],\n  });\n};\n\nconst updateSeries = (dispatch) => (state) => {\n  dispatch({\n    type: \"update_series\",\n    playload: state,\n  });\n};\n\nconst setLoading = (dispatch) => () => {\n  dispatch({\n    type: \"set_loading\",\n  });\n};\n\nexport const { Provider, Context } = createDataContext(\n  trackReducer,\n  { fetchData, updateSeries, setLoading },\n  {\n    data: [],\n    series: [],\n    loading: false,\n  }\n);\n\nconst getData = (data, country, type) => {\n  switch (type) {\n    case \"case\":\n      return data[country][\"case\"];\n    case \"deaths\":\n      return data[country][\"deaths\"];\n    case \"recovered\":\n      return data[country][\"recovered\"];\n    case \"recovered_rate\":\n      return data[country][\"recovered\"].map((num, i) =>\n        Number((num / data[country][\"case\"][i]) * 100).toFixed(1)\n      );\n    case \"death_rate\":\n      return data[country][\"deaths\"].map((num, i) =>\n        Number((num / data[country][\"case\"][i]) * 100).toFixed(1)\n      );\n    case \"new_case\":\n      return data[country][\"case\"].map((num, i) =>\n        i !== 0 ? num - data[country][\"case\"][i - 1] : null\n      );\n    default:\n      return data[country][\"case\"];\n  }\n};\n","import React, { useState } from \"react\";\nimport \"./countryIcons.css\";\nimport { Tooltip } from \"@material-ui/core\";\n\nconst default_arr = [\n  \"USA\",\n  \"UK\",\n  \"Canada\",\n  \"Russia\",\n  \"Italy\",\n  \"Spain\",\n  \"France\",\n  \"Brazil\",\n  \"India\",\n  \"Iran\",\n  \"Mexico\",\n  \"Malaysia\",\n  \"Portugal\",\n  \"Switzerland\",\n  \"Netherlands\",\n  \"Belgium\",\n  \"Sweden\",\n  \"Norway\",\n  \"Turkey\",\n  \"Japan\",\n  \"S. Korea\",\n  \"China\",\n  \"Thailand\",\n  \"Vietnam\",\n  \"Argentina\",\n  \"Peru\",\n];\n\nconst CountryIcons = ({ arr = default_arr, active, handleActive }) => {\n  const [max, setMax] = useState(8);\n  return (\n    <div\n      style={{\n        margin: \"1rem\",\n        padding: \"0.5rem 1.5rem 0 0.5rem\",\n        overflow: \"auto\",\n      }}\n    >\n      {arr.slice(0, max).map((country) => (\n        <div\n          style={{\n            display: \"inline-block\",\n          }}\n          key={country}\n        >\n          <Tooltip title={country}>\n            <img\n              className={`${active.has(country) && \"active\"} country-icons`}\n              src={`${\n                process.env.PUBLIC_URL && `${process.env.PUBLIC_URL}`\n              }/country_icons/${country}.png`}\n              alt={`${country}_icon`}\n              onClick={() => handleActive(country)}\n            />\n          </Tooltip>\n        </div>\n      ))}\n\n      {arr.length > max ? (\n        <div\n          style={{\n            display: \"inline-block\",\n            position: \"absolute\",\n          }}\n          onClick={() => setMax(max + 8)}\n        >\n          <div\n            className=\"country-icons\"\n            style={{\n              border: \"1px solid lightgrey\",\n              height: 60,\n              padding: 14,\n              userSelect: \"none\",\n            }}\n          >\n            <span\n              style={{\n                fontWeight: 800,\n              }}\n            >\n              {arr.length - max}+\n            </span>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CountryIcons;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst infoSet = [\n  { value: \"new_case\", name: \"New Case\", variant: \"info\" },\n  { value: \"total_case\", name: \"Confirmed Case\", variant: \"primary\" },\n  { value: \"deaths\", name: \"Deaths\", variant: \"danger\" },\n  { value: \"recovered\", name: \"Recovered\", variant: \"success\" },\n  { value: \"recovered_rate\", name: \"Recovered_Rate\", variant: \"warning\" },\n  { value: \"death_rate\", name: \"Death_Rate\", variant: \"dark\" },\n];\n\nexport default function DataType({ info, infoChangeHandler }) {\n  return (\n    <div\n      style={{\n        padding: \"1.5rem 1rem\",\n        flex: 10,\n      }}\n    >\n      {infoSet.map(({ name, variant, value }) => (\n        <Button\n          style={{\n            margin: 4,\n          }}\n          key={name}\n          variant={`${info !== value ? \"outline-\" : \"\"}${variant}`}\n          onClick={() => {\n            infoChangeHandler(value);\n          }}\n          size=\"sm\"\n        >\n          {name}\n        </Button>\n      ))}\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Context as ChartContext } from \"../context/ChartContext\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport { MapLoading } from \"../Component/MapLoading\";\nimport { Paper, FormControl, InputLabel, Select } from \"@material-ui/core\";\nimport { dateLabel } from \"../helper\";\n\nimport CountryIcons from \"./CountryIcons\";\nimport DataType from \"./DataType\";\n\nconst defaultSet = new Set([\"USA\", \"India\", \"Brazil\", \"Russia\"]);\n\nconst ChartComponent = () => {\n  const [active, setActive] = useState(defaultSet);\n  const [info, setInfo] = useState(\"new_case\");\n  const [days, setDays] = useState(14);\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n\n  const {\n    state: { loading, data, series },\n    fetchData,\n    setLoading,\n    updateSeries,\n  } = useContext(ChartContext);\n\n  useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n    setLoading();\n    fetchData(active, info, days);\n  }, []);\n\n  const update = (arr, type = null) => {\n    let newSeries = [];\n\n    for (let country of arr) {\n      newSeries.push({\n        name: country,\n        data: getData(country, type),\n      });\n    }\n\n    updateSeries(newSeries);\n  };\n\n  const infoChangeHandler = async (type) => {\n    await setInfo(type);\n    return update(active, type);\n  };\n\n  const getData = (country, type) => {\n    switch (type) {\n      case \"new_case\":\n        return data[country][\"case\"].map((num, i) =>\n          i !== 0 ? num - data[country][\"case\"][i - 1] : null\n        );\n      case \"total_case\":\n        return data[country][\"case\"];\n      case \"deaths\":\n        return data[country][\"deaths\"];\n      case \"recovered\":\n        return data[country][\"recovered\"];\n      case \"recovered_rate\":\n        return data[country][\"recovered\"].map((num, i) =>\n          Number((num / data[country][\"case\"][i]) * 100).toFixed(1)\n        );\n      case \"death_rate\":\n        return data[country][\"deaths\"].map((num, i) =>\n          Number((num / data[country][\"case\"][i]) * 100).toFixed(1)\n        );\n      default:\n        return data[country][\"case\"];\n    }\n  };\n\n  const handleActive = async (target) => {\n    if (active.has(target)) {\n      active.delete(target);\n    } else {\n      active.add(target);\n    }\n\n    await setActive(new Set([...active]));\n    await update(active, info);\n  };\n\n  const options = {\n    chart: {\n      type: \"line\",\n      zoom: {\n        enabled: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      width: 5,\n      curve: \"straight\",\n      dashArray: [0, 8, 5],\n    },\n    title: {\n      text: info,\n      align: \"left\",\n      style: {\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n      },\n    },\n    legend: {\n      tooltipHoverFormatter: function (val, opts) {\n        return (\n          val +\n          \" - \" +\n          opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] +\n          \"\"\n        );\n      },\n    },\n    markers: {\n      size: 0,\n      hover: {\n        sizeOffset: 6,\n      },\n    },\n    xaxis: {\n      categories: dateLabel(days),\n      labels: {\n        style: {\n          fontSize: \"15px\",\n          fontFamily: \"Helvetica, Arial, sans-serif\",\n          fontWeight: 400,\n          cssClass: \"apexcharts-xaxis-label\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          fontSize: \"15px\",\n          fontFamily: \"Helvetica, Arial, sans-serif\",\n          fontWeight: 400,\n          cssClass: \"apexcharts-xaxis-label\",\n        },\n      },\n    },\n    tooltip: {\n      y: [\n        {\n          title: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      ],\n    },\n    grid: {\n      borderColor: \"#f1f1f1\",\n    },\n  };\n\n  return (\n    <Paper\n      style={{\n        margin: \"1.5rem \",\n        padding: \"1rem\",\n        minHeight: \"100vh\",\n      }}\n      elevation={3}\n    >\n      <div\n        style={{\n          margin: \"1rem\",\n        }}\n      >\n        <h1>History Record</h1>\n      </div>\n      <ScrollAnimation\n        offset={50}\n        animateIn=\"zoomInDown\"\n        animateOut=\"zoomOutDown\"\n      >\n        <CountryIcons active={active} handleActive={handleActive} />\n      </ScrollAnimation>\n\n      <ScrollAnimation offset={250} animateIn=\"zoomInDown\" animateOut=\"rollOut\">\n        <Paper\n          style={{\n            margin: \"1rem\",\n            padding: \"0.5rem\",\n          }}\n          elevation={3}\n        >\n          <div\n            style={{\n              display: \"flex\",\n            }}\n          >\n            <DataType info={info} infoChangeHandler={infoChangeHandler} />\n            <FormControl\n              variant=\"outlined\"\n              style={{\n                margin: 5,\n                minWidth: 120,\n                // padding: 10,\n                marginTop: 10,\n              }}\n            >\n              <InputLabel ref={inputLabel}>Data Range</InputLabel>\n              <Select\n                style={{\n                  marginTop: 10,\n                }}\n                native\n                value={days}\n                labelWidth={labelWidth}\n                onChange={async (e) => {\n                  let days = e.target.value;\n                  await setDays(days);\n                  await fetchData(active, info, days);\n                }}\n              >\n                <option value={14}>2 Weeks</option>\n                <option value={7}>1 Week</option>\n                <option value={21}>3 Weeks</option>\n                <option value={30}>1 Month</option>\n                <option value={60}>2 Month</option>\n              </Select>\n            </FormControl>\n          </div>\n\n          {!loading ? (\n            <Chart options={options} series={series} height={600} />\n          ) : (\n            <MapLoading />\n          )}\n        </Paper>\n      </ScrollAnimation>\n    </Paper>\n  );\n};\n\nexport default ChartComponent;\n","import React from \"react\";\nimport { Row, Container } from \"react-bootstrap\";\nimport { FaGithub, FaLinkedinIn } from \"react-icons/fa\";\nimport \"hover.css/css/hover-min.css\";\n\nconst sentence = \"More about this project\".split(\"\");\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          {/* <h3>More about this project</h3> */}\n          {sentence.map((char, i) => (\n            <div className=\"sentence\" key={i}>\n              {char !== \" \" ? char : <span style={{ marginRight: 5 }} />}\n            </div>\n          ))}\n          <FaGithub />\n        </Row>\n      </Container>\n\n      <Row className=\"justify-content-center\">\n        <div>\n          <a\n            href=\"https://github.com/a81884855/covid-19-track\"\n            className=\"social hvr-pop\"\n          >\n            <FaGithub />\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/gary-guan/\"\n            className=\"social hvr-pop\"\n          >\n            <FaLinkedinIn />\n          </a>\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport Nav from \"./Layout/Navbar\";\nimport MapChart from \"./Map\";\nimport Chart from \"./Chart\";\nimport Footer from \"./Layout/Footer\";\n\nfunction App() {\n  return (\n    <>\n      <Nav />\n      <MapChart />\n      <Chart />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"animate.css/animate.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider as ChartDataProvider } from \"./context/ChartContext\";\nimport { Provider as MapDataProvider } from \"./context/MapContext\";\nReactDOM.render(\n  <MapDataProvider>\n    <ChartDataProvider>\n      <App />\n    </ChartDataProvider>\n  </MapDataProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}